{"ast":null,"code":"var _jsxFileName = \"/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [availableMeals, setAvailableMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n    const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json'); // if (!res.ok) {\n    //     throw new Error('Something went wrong!')\n    // }\n\n    const data = await res.json();\n    const loadedMeals = [];\n\n    for (const key in data) {\n      loadedMeals.push({\n        id: key,\n        name: data[key].name,\n        description: data[key].description,\n        price: data[key].price\n      });\n    }\n\n    setAvailableMeals(loadedMeals);\n  };\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No meals found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 19\n  }, this);\n\n  if (availableMeals.length > 0) {\n    content = availableMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      price: meal.price,\n      description: meal.description\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this));\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading available meals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"jZmEYrqg1K4jgWYr1zFGuLbjJ7I=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js"],"names":["useCallback","useEffect","useState","classes","Card","MealItem","AvailableMeals","availableMeals","setAvailableMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","res","fetch","data","json","loadedMeals","key","push","id","name","description","price","content","length","map","meal","meals"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMW,iBAAiB,GAAG,YAAY;AAClCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEI,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAAvB,CAJ8B,CAM9B;AACA;AACA;;AAEA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACpBE,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,QAAAA,EAAE,EAAEF,GADS;AAEbG,QAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFH;AAGbC,QAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHV;AAIbC,QAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJJ,OAAjB;AAMH;;AAEDhB,IAAAA,iBAAiB,CAACU,WAAD,CAAjB;AACP,GAxBD;;AA0BAjB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,MAAIY,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIlB,cAAc,CAACmB,MAAf,GAAwB,CAA5B,EAA+B;AAC3BD,IAAAA,OAAO,GAAGlB,cAAc,CAACoB,GAAf,CAAmBC,IAAI,iBAC7B,QAAC,QAAD;AACI,MAAA,EAAE,EAAEA,IAAI,CAACP,EADb;AAEI,MAAA,IAAI,EAAEO,IAAI,CAACN,IAFf;AAGI,MAAA,KAAK,EAAEM,IAAI,CAACJ,KAHhB;AAII,MAAA,WAAW,EAAEI,IAAI,CAACL;AAJtB,OAKSK,IAAI,CAACP,EALd;AAAA;AAAA;AAAA;AAAA,YADM,CAAV;AASH;;AAED,MAAIV,KAAJ,EAAW;AACPc,IAAAA,OAAO,gBAAG;AAAA,gBAAId;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AAED,MAAIF,SAAJ,EAAe;AACXgB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AAED,sBACI;AAAS,IAAA,SAAS,EAAEtB,OAAO,CAAC0B,KAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhED;;GAAMnB,c;;KAAAA,c;AAkEN,eAAeA,cAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\n\n\nconst AvailableMeals = () => {\n    const [availableMeals, setAvailableMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchMealsHandler = async () => {\n        setIsLoading(true);\n        setError(null);\n\n            const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json');\n\n            // if (!res.ok) {\n            //     throw new Error('Something went wrong!')\n            // }\n\n            const data = await res.json();\n\n            const loadedMeals = [];\n\n            for (const key in data) {\n                loadedMeals.push({\n                    id: key,\n                    name: data[key].name,\n                    description: data[key].description,\n                    price: data[key].price\n                });\n            }\n\n            setAvailableMeals(loadedMeals);\n    };\n\n    useEffect(() => {\n        fetchMealsHandler();\n    }, [fetchMealsHandler])\n\n    let content = <p>No meals found.</p>;\n\n    if (availableMeals.length > 0) {\n        content = availableMeals.map(meal =>\n            <MealItem\n                id={meal.id}\n                name={meal.name}\n                price={meal.price}\n                description={meal.description}\n                key={meal.id}\n            />\n        )\n    }\n\n    if (error) {\n        content = <p>{error}</p>\n    }\n\n    if (isLoading) {\n        content = <p>Loading available meals...</p>\n    }\n\n    return (\n        <section className={classes.meals}>\n            <Card>\n                <ul>{content}</ul>\n            </Card>\n        </section>\n    )\n}\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}