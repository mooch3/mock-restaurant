{"ast":null,"code":"var _jsxFileName = \"/Users/smithdc/Desktop/restaurant-webpage/src/components/Cart/OrderForm/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './OrderForm.module.css';\nimport useInput from '../../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = () => {\n  _s();\n\n  const {\n    hasError: fNameHasError,\n    onBlurHandler: fNameBlurHandler,\n    onChangeHandler: fNameOnChangedHandler,\n    value: fName,\n    reset: resetFName\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: lNameHasError,\n    onBlurHandler: lNameBlurHandler,\n    onChangeHandler: lNameOnChangedHandler,\n    value: lName,\n    reset: resetLName\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: addressHasError,\n    onBlurHandler: addressBlurHandler,\n    onChangeHandler: addressOnChangedHandler,\n    value: address,\n    reset: resetAddress\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: emailHasError,\n    onBlurHandler: emailBlurHandler,\n    onChangeHandler: emailOnChangedHandler,\n    value: email,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(fName);\n    resetFName();\n    resetLName();\n    resetAddress();\n  };\n\n  const fNameClasses = fNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const lNameClasses = lNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const addressClasses = addressHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const emailClasses = emailHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: submitHandler,\n      className: fNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: fNameBlurHandler,\n        onChange: fNameOnChangedHandler,\n        id: \"firstName\",\n        value: fName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), fNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your first name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: lNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: lNameBlurHandler,\n        onChange: lNameOnChangedHandler,\n        id: \"lastName\",\n        value: lName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), lNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your last name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: addressBlurHandler,\n        onChange: addressOnChangedHandler,\n        id: \"address\",\n        value: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['form-control'] + ' ' + classes.invalid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        autoComplete: \"off\",\n        onBlur: emailBlurHandler,\n        onChange: emailOnChangedHandler,\n        id: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderForm, \"WoYN0xrUKsuDnpDZoJMtW1CltbI=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/restaurant-webpage/src/components/Cart/OrderForm/OrderForm.js"],"names":["classes","useInput","OrderForm","hasError","fNameHasError","onBlurHandler","fNameBlurHandler","onChangeHandler","fNameOnChangedHandler","value","fName","reset","resetFName","trim","lNameHasError","lNameBlurHandler","lNameOnChangedHandler","lName","resetLName","addressHasError","addressBlurHandler","addressOnChangedHandler","address","resetAddress","emailHasError","emailBlurHandler","emailOnChangedHandler","email","resetEmail","includes","submitHandler","e","preventDefault","console","log","fNameClasses","invalid","lNameClasses","addressClasses","emailClasses"],"mappings":"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","sourcesContent":["import classes from './OrderForm.module.css';\nimport useInput from '../../../hooks/use-input';\n\nconst OrderForm = () => {\n\n    const {\n        hasError: fNameHasError,\n        onBlurHandler: fNameBlurHandler,\n        onChangeHandler: fNameOnChangedHandler,\n        value: fName,\n        reset: resetFName\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: lNameHasError,\n        onBlurHandler: lNameBlurHandler,\n        onChangeHandler: lNameOnChangedHandler,\n        value: lName,\n        reset: resetLName\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: addressHasError,\n        onBlurHandler: addressBlurHandler,\n        onChangeHandler: addressOnChangedHandler,\n        value: address,\n        reset: resetAddress\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: emailHasError,\n        onBlurHandler: emailBlurHandler,\n        onChangeHandler: emailOnChangedHandler,\n        value: email,\n        reset: resetEmail\n\n    } = useInput(value => value.includes('@'));\n\n    const submitHandler = e => {\n        e.preventDefault();\n        console.log(fName);\n\n        resetFName();\n        resetLName();\n        resetAddress();\n\n    }\n\n    const fNameClasses = fNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const lNameClasses = lNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const addressClasses = addressHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const emailClasses = emailHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n\n    return (\n        <form>\n            <div onSubmit={submitHandler} className={fNameClasses}>\n                <label>First Name</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={fNameBlurHandler}\n                    onChange={fNameOnChangedHandler}\n                    id=\"firstName\"\n                    value={fName}\n                />\n                {fNameHasError && <p>Please enter your first name.</p>}\n            </div>\n            <div className={lNameClasses}>\n                <label>Last Name</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={lNameBlurHandler}\n                    onChange={lNameOnChangedHandler}\n                    id=\"lastName\"\n                    value={lName}\n                />\n                {lNameHasError && <p>Please enter your last name.</p>}\n            </div>\n            <div className={addressClasses}>\n                <label>Address</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={addressBlurHandler}\n                    onChange={addressOnChangedHandler}\n                    id=\"address\"\n                    value={address}\n                />\n                {addressHasError && <p>Please enter your address.</p>}\n            </div>\n            <div className={classes['form-control'] + ' ' + classes.invalid}>\n                <label>Email</label>\n                <input\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    onBlur={emailBlurHandler}\n                    onChange={emailOnChangedHandler}\n                    id=\"address\"\n                />\n                {emailHasError && <p>Please enter your address.</p>}\n            </div>\n        </form>\n    )\n}\n\nexport default OrderForm;"]},"metadata":{},"sourceType":"module"}