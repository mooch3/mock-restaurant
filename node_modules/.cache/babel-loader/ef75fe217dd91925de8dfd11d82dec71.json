{"ast":null,"code":"var _jsxFileName = \"/Users/smithdc/Desktop/restaurant-webpage/src/components/Cart/OrderForm/OrderForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './OrderForm.module.css';\nimport useInput from '../../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderForm = props => {\n  _s();\n\n  const {\n    hasError: fNameHasError,\n    onBlurHandler: fNameBlurHandler,\n    onChangeHandler: fNameOnChangedHandler,\n    value: fName,\n    reset: resetFName,\n    isValid: fNameIsValid\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: lNameHasError,\n    onBlurHandler: lNameBlurHandler,\n    onChangeHandler: lNameOnChangedHandler,\n    value: lName,\n    reset: resetLName,\n    isValid: lNameIsValid\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: addressHasError,\n    onBlurHandler: addressBlurHandler,\n    onChangeHandler: addressOnChangedHandler,\n    value: address,\n    reset: resetAddress,\n    isValid: addressIsValid\n  } = useInput(value => value.trim() !== '');\n  const {\n    hasError: emailHasError,\n    onBlurHandler: emailBlurHandler,\n    onChangeHandler: emailOnChangedHandler,\n    value: email,\n    reset: resetEmail,\n    isValid: emailIsValid\n  } = useInput(value => value.includes('@'));\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(fName, lName, email, address);\n    resetFName();\n    resetLName();\n    resetAddress();\n    resetEmail();\n  };\n\n  let formIsValid = false;\n\n  if (emailIsValid && fNameIsValid && lNameIsValid && addressIsValid) {\n    formIsValid = true;\n  }\n\n  const fNameClasses = fNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const lNameClasses = lNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const addressClasses = addressHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  const emailClasses = emailHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: submitHandler,\n      className: fNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: fNameBlurHandler,\n        onChange: fNameOnChangedHandler,\n        id: \"firstName\",\n        value: fName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), fNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your first name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: lNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: lNameBlurHandler,\n        onChange: lNameOnChangedHandler,\n        id: \"lastName\",\n        value: lName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), lNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your last name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onBlur: addressBlurHandler,\n        onChange: addressOnChangedHandler,\n        id: \"address\",\n        value: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        autoComplete: \"off\",\n        onBlur: emailBlurHandler,\n        onChange: emailOnChangedHandler,\n        id: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.classes,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.btncCnlClasses,\n        onClick: props.onClosed,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), props.hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        className: formIsValid ? props.btnClasses : undefined,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderForm, \"TbUgB/muERPJFUbZpOpsTCtrA4Y=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = OrderForm;\nexport default OrderForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/restaurant-webpage/src/components/Cart/OrderForm/OrderForm.js"],"names":["classes","useInput","OrderForm","props","hasError","fNameHasError","onBlurHandler","fNameBlurHandler","onChangeHandler","fNameOnChangedHandler","value","fName","reset","resetFName","isValid","fNameIsValid","trim","lNameHasError","lNameBlurHandler","lNameOnChangedHandler","lName","resetLName","lNameIsValid","addressHasError","addressBlurHandler","addressOnChangedHandler","address","resetAddress","addressIsValid","emailHasError","emailBlurHandler","emailOnChangedHandler","email","resetEmail","emailIsValid","includes","submitHandler","event","preventDefault","console","log","formIsValid","fNameClasses","invalid","lNameClasses","addressClasses","emailClasses","btncCnlClasses","onClosed","hasItems","btnClasses","undefined"],"mappings":"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","sourcesContent":["import classes from './OrderForm.module.css';\nimport useInput from '../../../hooks/use-input';\n\nconst OrderForm = (props) => {\n\n    const {\n        hasError: fNameHasError,\n        onBlurHandler: fNameBlurHandler,\n        onChangeHandler: fNameOnChangedHandler,\n        value: fName,\n        reset: resetFName,\n        isValid: fNameIsValid\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: lNameHasError,\n        onBlurHandler: lNameBlurHandler,\n        onChangeHandler: lNameOnChangedHandler,\n        value: lName,\n        reset: resetLName,\n        isValid: lNameIsValid\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: addressHasError,\n        onBlurHandler: addressBlurHandler,\n        onChangeHandler: addressOnChangedHandler,\n        value: address,\n        reset: resetAddress,\n        isValid: addressIsValid\n\n    } = useInput(value => value.trim() !== '');\n\n    const {\n        hasError: emailHasError,\n        onBlurHandler: emailBlurHandler,\n        onChangeHandler: emailOnChangedHandler,\n        value: email,\n        reset: resetEmail,\n        isValid: emailIsValid\n\n    } = useInput(value => value.includes('@'));\n\n    const submitHandler = event => {\n        event.preventDefault();\n        console.log(fName, lName, email, address);\n\n        resetFName();\n        resetLName();\n        resetAddress();\n        resetEmail();\n\n    };\n\n    let formIsValid = false;\n    \n    if (emailIsValid && fNameIsValid && lNameIsValid && addressIsValid) {\n        formIsValid = true;\n    }\n\n    const fNameClasses = fNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const lNameClasses = lNameHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const addressClasses = addressHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n    const emailClasses = emailHasError ? classes['form-control'] + ' ' + classes.invalid : classes['form-control'];\n\n    return (\n        <form>\n            <div onSubmit={submitHandler} className={fNameClasses}>\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={fNameBlurHandler}\n                    onChange={fNameOnChangedHandler}\n                    id=\"firstName\"\n                    value={fName}\n                />\n                {fNameHasError && <p>Please enter your first name.</p>}\n            </div>\n            <div className={lNameClasses}>\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={lNameBlurHandler}\n                    onChange={lNameOnChangedHandler}\n                    id=\"lastName\"\n                    value={lName}\n                />\n                {lNameHasError && <p>Please enter your last name.</p>}\n            </div>\n            <div className={addressClasses}>\n                <label htmlFor=\"address\">Address</label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    onBlur={addressBlurHandler}\n                    onChange={addressOnChangedHandler}\n                    id=\"address\"\n                    value={address}\n                />\n                {addressHasError && <p>Please enter your address.</p>}\n            </div>\n            <div className={emailClasses}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    onBlur={emailBlurHandler}\n                    onChange={emailOnChangedHandler}\n                    id=\"email\"\n                    value={email}\n                />\n                {emailHasError && <p>Please enter a valid email.</p>}\n            </div>\n            <div className={props.classes}>\n                <button className={props.btncCnlClasses} onClick={props.onClosed}>Close</button>\n                {props.hasItems && <button disabled={!formIsValid} className={formIsValid ? props.btnClasses : undefined}>Order</button>}\n            </div>\n        </form>\n    )\n}\n\nexport default OrderForm;"]},"metadata":{},"sourceType":"module"}