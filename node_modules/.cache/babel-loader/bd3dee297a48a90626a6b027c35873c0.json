{"ast":null,"code":"var _jsxFileName = \"/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [availableMeals, setAvailableMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMealsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json');\n\n      if (!res.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await res.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setAvailableMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No meals found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 19\n  }, this);\n\n  if (availableMeals.length > 0) {\n    content = availableMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      price: meal.price,\n      description: meal.description\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this));\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading available meals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"wRqKS9k9kk5tu/Ik49z9qHpigJU=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js"],"names":["useCallback","useEffect","useState","classes","Card","MealItem","DUMMY_MEALS","id","name","description","price","AvailableMeals","availableMeals","setAvailableMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","res","fetch","ok","Error","data","json","loadedMeals","key","push","message","content","length","map","meal","meals"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\n\nconst DUMMY_MEALS = [\n    {\n        id: 'm1',\n        name: 'Sushi',\n        description: 'Finest fish and veggies',\n        price: 22.99,\n    },\n    {\n        id: 'm2',\n        name: 'Schnitzel',\n        description: 'A german specialty!',\n        price: 16.5,\n    },\n    {\n        id: 'm3',\n        name: 'Barbecue Burger',\n        description: 'American, raw, meaty',\n        price: 12.99,\n    },\n    {\n        id: 'm4',\n        name: 'Green Bowl',\n        description: 'Healthy...and green...',\n        price: 18.99,\n    },\n];\n\n\n\nconst AvailableMeals = () => {\n    const [availableMeals, setAvailableMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchMealsHandler = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json');\n\n            if (!res.ok) {\n                throw new Error('Something went wrong!')\n            }\n\n            const data = await res.json();\n\n            const loadedMeals = [];\n\n            for (const key in data) {\n                loadedMeals.push({\n                    id: key,\n                    name: data[key].name,\n                    description: data[key].description,\n                    price: data[key].price\n                });\n            }\n\n            setAvailableMeals(loadedMeals);\n        } catch (error) {\n            setError(error.message);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchMealsHandler();\n    }, [fetchMealsHandler])\n\n    let content = <p>No meals found.</p>;\n\n    if (availableMeals.length > 0) {\n        content = availableMeals.map(meal =>\n            <MealItem\n                id={meal.id}\n                name={meal.name}\n                price={meal.price}\n                description={meal.description}\n                key={meal.id}\n            />\n        )\n    }\n\n    if (error) {\n        content = <p>{error}</p>\n    }\n\n    if (isLoading) {\n        content = <p>Loading available meals...</p>\n    }\n\n    return (\n        <section className={classes.meals}>\n            <Card>\n                <ul>{content}</ul>\n            </Card>\n        </section>\n    )\n}\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}