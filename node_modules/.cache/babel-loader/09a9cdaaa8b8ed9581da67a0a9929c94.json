{"ast":null,"code":"var _jsxFileName = \"/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [availableMeals, setAvailableMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMealsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json');\n\n      if (!res.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await res.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setAvailableMeals(loadedMeals);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No meals found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }, this);\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading available meals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (availableMeals.length > 0) {\n    content = availableMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      price: meal.price,\n      description: meal.description\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this));\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"wRqKS9k9kk5tu/Ik49z9qHpigJU=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/restaurant-webpage/src/components/Meals/AvailableMeals.js"],"names":["useCallback","useEffect","useState","classes","Card","MealItem","AvailableMeals","availableMeals","setAvailableMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","res","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","content","length","map","meal","meals"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\n\n\nconst AvailableMeals = () => {\n    const [availableMeals, setAvailableMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchMealsHandler = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const res = await fetch('https://react-http-de322-default-rtdb.firebaseio.com/meals.json');\n\n            if (!res.ok) {\n                throw new Error('Something went wrong!')\n            }\n\n            const data = await res.json();\n\n            const loadedMeals = [];\n\n            for (const key in data) {\n                loadedMeals.push({\n                    id: key,\n                    name: data[key].name,\n                    description: data[key].description,\n                    price: data[key].price\n                });\n            }\n\n            setAvailableMeals(loadedMeals);\n            setIsLoading(false)\n        } catch (error) {\n            setError(error.message);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchMealsHandler();\n    }, [fetchMealsHandler])\n\n    let content = <p>No meals found.</p>;\n\n    if (isLoading) {\n        content = <p>Loading available meals...</p>\n    }\n\n    if (availableMeals.length > 0) {\n        content = availableMeals.map(meal =>\n            <MealItem\n                id={meal.id}\n                name={meal.name}\n                price={meal.price}\n                description={meal.description}\n                key={meal.id}\n            />\n        )\n    }\n\n    if (error) {\n        content = <p>{error}</p>\n    }\n\n\n\n    return (\n        <section className={classes.meals}>\n            <Card>\n                <ul>{content}</ul>\n            </Card>\n        </section>\n    )\n}\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}